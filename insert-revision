#!/bin/bash
# insert-revision
# Created Thu Sep 29 16:03:47 AKDT 2016
# Copyright (C) 2016 by Raymond E. Marcil <marcilr@gmail.com>
#
# Insert git revision, hash, and data into header.
#
# The existing revision will get updated:
#     \date{Revision: *} %%REVISION
# to:
#     \date{Revision: 425 (ce8f129)\\September 30, 2016} %%REVISION
#
# The Makefile creates a file called revision.tex which looks like this:
#     % Autogenerated, do not edit
#     \newcommand{\revisiondate}{2012-10-17}
#     \newcommand{\revision}{e8e5238}
#
# To insert it into the main document, simply use \input{revision} and
# then insert \revisiondate or \revision at the desired place.
#
#
# Links
# =====
# How to get the git commit count?
# git rev-list HEAD --count
# http://stackoverflow.com/questions/677436/how-to-get-the-git-commit-count
#
# Inserting git commit date without hooks <===
# Details of recreating revison.tex file for inclusion in tex document.
# http://tex.stackexchange.com/questions/75336/inserting-git-commit-date-without-hooks
#
# Processing bash variable with sed
# http://unix.stackexchange.com/questions/6629/processing-bash-variable-with-sed
#
# Using sed to insert latex commands around headers of a document
# http://unix.stackexchange.com/questions/90182/using-sed-to-insert-latex-commands-around-headers-of-a-document
#

# ======================================
# Configuration
# ======================================

# LaTeX source file to update
TEX=git.tex


# ======================================
# Binaries
# ======================================
DATE=/bin/date
GIT=/usr/bin/git
SED=/bin/sed


# Get revision number as the commit count
REVISION=`${GIT} rev-list HEAD --count`

# Get revision sha hash
HASH=`${GIT} log -1 --format=%h`

# Gets short iso revision date like 2016-09-29
REVISIONDATE=`${GIT} log -1 --format=%ad --date=short`

#
# Update iso date format to <full month> DD, YYYY format
# like "September 30, 2016"
# $ date -d 2016-09-30 "+%B %d, %Y"
# September 30, 2016
#
REVISIONDATE=`${DATE} -d ${REVISIONDATE} "+%B %d, %Y"`

#
# Insert revision date into tex document matching:
#   \date{Revision*%%REVISION
#
# This is slick since the updated revision, hash and date
# can again be updated without issue.
#
# NOTES:
# o The key matching element is the %%REVISION at the end of the
#   regex.  This is the key to setting the end of the string
#   being matched.
#
# o 4 backslashes "\\\\" are used to get sed to output a single
#   backslash below.  Think this deals with escaping within double
#   quotes.
#
# o The 2 outputted double quotes put the datastamp on the next line.
#
${SED} -i "s/\\date{Revision.*\%\%REVISION/\\date{Revision: ${REVISION} (${HASH})\\\\\\\\${REVISIONDATE}} \%\%REVISION/g" ${TEX}
